<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>References on Hugo documentation theme</title><link>https://richg-github.github.io/docs.github.io/reference/</link><description>Recent content in References on Hugo documentation theme</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Designed by [Themefisher](https://themefisher.com) &amp; Developed by [Gethugothemes](https://gethugothemes.com)</copyright><atom:link href="https://richg-github.github.io/docs.github.io/reference/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://richg-github.github.io/docs.github.io/reference/about-cloudtrail-new/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/about-cloudtrail-new/</guid><description>Configure AWS CloudTrail Log Collection ENG-17219: We are missing contextual information and information about requirements for CloudTrail. Much of this can go into this doc:
A customer recently had a huge charge on their AWS account due to CloudTrail and was looking for someplace in the documentation where that is noted. It is not clear.
Questions to answer:
What all do we need the customer to have set up? How does our collection work?</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/reference/about-cloudtrail/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/about-cloudtrail/</guid><description>About AWS CloudTrail and Alert Logic AWS CloudTrail is an Amazon Web Services (AWS) service that logs all of your AWS account activity. CloudTrail records actions taken by a user, role, or AWS service as events. Recorded actions include those taken in the AWS Management Console, AWS Command Line Interface, and AWS SDKs and APIs.
AWS CloudTrail is enabled on your AWS account when you create it. AWS allows you to create additional trails to record events in specific regions and deliver them to a specified S3 bucket.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/reference/cloudtrail-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/cloudtrail-setup/</guid><description>How Alert Logic sets up CloudTrail If you configure an AWS deployment in Automatic Mode with the Alert Logic CloudFormation template, Alert Logic sets up AWS CloudTrail for you automatically as explained in this document.
For information about how to configure an AWS deployment to take advantage of automatic setup, see Configure AWS Full Permission Deployment.
AWS account types Explanations that follow refer to these types of AWS accounts:
Protected account—The account protected by Alert Logic</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/reference/copy-of-migration-prechecks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/copy-of-migration-prechecks/</guid><description>Migration Prechecks Source page: https://alertlogic.atlassian.net/wiki/spaces/PD/pages/1284046849/Migration+Pre-Checks+Explained
I went through and made all the issues into info dev style. The next step is putting the descriptions from the bottom into the relevant checks above (like &amp;ldquo;Deployments with no credentials&amp;rdquo;). I delete the ones that are on the AL side only because they won&amp;rsquo;t help the customer prepare.
Must Resolve Before Migration These are items that need to be addressed pre-migration.
Deployments that are not in OK status This is probably one of the more important items to address pre-migration if possible, as the more the agent/sources/devices are cleaned up the easier the migration process will run, and minimize the post-migration tasks significantly.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/reference/customer-data-retention/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/customer-data-retention/</guid><description>Customer Data Retention Policy The policy for how long Alert Logic maintains customer data in its systems before permanent deletion varies according to data type. The schedule also depends on whether a customer still has an active account with Alert Logic or has ceased to have an active account. The policy is subject to individually contracted arrangements governing retention of a customer&amp;rsquo;s data that has been negotiated with Alert Logic.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/reference/integrations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/integrations/</guid><description>Alert Logic Integrations Alert Logic Managed Detection and Response is a suite of threat management services and capabilities. Alert Logic offers three levels of security: Essentials, Professional, and Enterprise. The tiers provide the different levels of coverage from a tightly integrated toolset, cybersecurity threats, expanding compliance risks, and resource constraints across operating systems and applications you run on various platforms.
You configure custom checks as inputs to Alert Logic, and extend the capabilities of Alert LogicAWS environments with AWS Inspector and AWS Config Rules.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/reference/migration-prechecks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/migration-prechecks/</guid><description>Migration Prechecks Before you upgrade to Managed Detection and Response (MDR), Alert Logic performs a migration precheck to identify issues in your environment that can block your upgrade or affect its success. The following information explains the issues that the precheck can find, when the issues must be resolved, and how to resolve them.
You can use the information to prevent each issue, or you can wait for the precheck results and use the information to resolve specific issues that Alert Logic notifies you about.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/reference/scans-technical-description/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/scans-technical-description/</guid><description>Alert Logic Scanning Technical Description Host discovery Host discovery determines if a computer or IP address is active. Host discovery scans detect legitimate hosts and determines empty address ranges to avoid unnecessary traffic. The ASV scan solution is for the PCI requirement to perform host discovery which makes a reasonable attempt to identify live systems that include live systems that do not respond to ICMP echo (“ping”) requests. To learn more about this requirement, see the PCI ASV Program Guide,</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/reference/search-projections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/search-projections/</guid><description>Search Assistant Projections Projections combine with your search statements to specify which columns display your search results, and how your search results appear in the list. By default, Alert Logic displays search results in descending order by time received and log message. The Search Assistant helps you create projections by providing suggestions as you type.
SELECT Every projection statement must start with SELECT, which specifies the data field names that appear as columns in the search results list.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/reference/written-offer-source-code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/reference/written-offer-source-code/</guid><description>Written Offer for Source Code For third party technology that you receive from Alert Logic in binary form which is licensed under an open source license that gives you the right to receive the source code for that binary. You can obtain a copy of the applicable source code from Alert Logic by making a request to Alert Logic Support with the subject line [Open Source Code Request].</description></item></channel></rss>