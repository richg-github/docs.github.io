<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Responds on Hugo documentation theme</title><link>https://richg-github.github.io/docs.github.io/respond/</link><description>Recent content in Responds on Hugo documentation theme</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Designed by [Themefisher](https://themefisher.com) &amp; Developed by [Gethugothemes](https://gethugothemes.com)</copyright><atom:link href="https://richg-github.github.io/docs.github.io/respond/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/</guid><description>Get Started with Automated Response (Beta) This document is intended for early-access customers, and it is updated as Automated Response features are enhanced. Gain full security value from the Managed Detection and Response (MDR) platform by setting up automated responses to threats that Alert Logic detects. The Automated Response feature in the Alert Logic console helps you create workflows between Alert Logic and your applications to respond to common security threats automatically.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/add-task/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/add-task/</guid><description>Add a Task to a Playbook (Beta) A task is an action that you want the playbook to perform. Instructions in this document are common to all tasks. For task-specific configuration instructions, see the Playbook Task Configuration Guide (Beta).
Complete the following steps to add a task to your playbook:
Add a task in the workflow diagram Add task details (optional) Configure task input View task results (optional) Configure task output (optional) Add a task in the workflow diagram To add a task, click the add task icon () in the workflow diagram, and then select the task that you want to add.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/create-playbook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/create-playbook/</guid><description>Create a Playbook (Draft) An automated response playbook is a predefined series of actions that can run automatically when triggered or on demand. You can create a playbook from a template, manually, or by importing from another playbook.
Playbook types When you create a playbook, several choices are available:
Incidentâ€”Automates actions in response to incidents that Alert Logic generates when it detects a security event. For more information about incidents, see Incidents.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/inquiries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/inquiries/</guid><description>Playbook Inquiries Name of playbook, run status (succeeded, failed, pending?), start and end time. Open the inquiry, see more details such as the task name, action name?, playbook description, type (channel?), result, logs, run playbook button, see execution history button.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/plan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/plan/</guid><description>Plan Your Automated Response An important first step in any Automated Response solution is to develop a plan.
Before you start creating your playbook, Alert Logic recommends completing these steps in preparation:
Identify automation opportunities Define the problem Identify who will use the automation Define your automation goals Outline the process Design the architecture (create asset groups, configure connection targets and connectors)</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/playbooks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/playbooks/</guid><description>Get Started with Playbooks A playbook is a series of automated workflow actions between Alert Logic and your systems that you define. On the Playbooks page, you can add a playbook and configure it to run automatically in response to triggers, with or without an approval step. You can also run a playbook on a specific incident. Alert Logic provides templates you can use as a starting point to create playbooks for common scenarios.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/task-configuration-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/task-configuration-guide/</guid><description>Playbook Task Configuration Guide (Beta) Playbook tasks support common security activities such as blocking attackers and disabling user accounts in an Amazon Web Services (AWS) environment.
The following table lists all playbook tasks with an available configuration guide. For instructions on how to configure the input for a specific task, click a link in the Task column. For information about adding a task to your playbook and configuration steps that are common to all tasks, see Add a Task to a Playbook (Beta).</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/amazon-sns-publish/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/amazon-sns-publish/</guid><description>Configure a Send Message to Amazon SNS Topic Task (Draft) In your automated response playbook, you can configure a Send Message to Amazon SNS Topic task to trigger an action in Amazon Web Services (AWS) by sending a message.
The task uses Amazon SNS to send a message from Alert Logic to:
Endpoints subscribed to an Amazon Simple Notification Service (SNS) topic Mobile platform endpoint Phone number as a text (SMS) message This task uses the Amazon SNS Publish action to send the message.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/aws-disable-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/aws-disable-user/</guid><description>Configure a Disable AWS User Task (Draft) In your automated response playbook, you can configure a Disable AWS User task to disable an Amazon Web Services (AWS) user.
Complete the following steps to successfully configure the Disable AWS User task:
Create a connection target for the AWS IAM role Add the task to your playbook Configure the task input Configure the task output (optional) Create a connection target for the AWS IAM role The Disable AWS User task requires a connection target for the AWS IAM role that grants Alert Logic access to disable AWS users.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/aws-waf-update-ip-set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/aws-waf-update-ip-set/</guid><description>Configure an Update AWS WAF IP Set Task (Draft) In your automated response playbook, you can configure an Update AWS WAF IP Set task to update an Amazon Web Services (AWS) WAF (web application firewall) IP set that controls access to a protected Amazon CloudFront distribution or regional application.
An IP set is a collection of IP addresses and ranges that you can use in an AWS WAF rule statement to perform actions such as blocking or unblocking IP addresses.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/azure-disable-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/azure-disable-user/</guid><description>Configure a Disable Azure AD User Task (Beta) In your automated response playbook, you can configure a Disable Azure AD User task to disable a user in Azure Active Directory (AD).
A typical use case is to disable an Office 365 user that is the victim of an incident.
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/azure-enable-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/azure-enable-user/</guid><description>Configure an Enable Azure AD User Task (Beta) In your automated response playbook, you can configure an Enable Azure AD User task to enable a user in Azure Active Directory (AD).
A typical use case is to enable an Office 365 user who was disabled previously after being the victim of an incident.
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/connector-send-incident/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/connector-send-incident/</guid><description>Configure a Send Incident via Connector Task (Draft) In your automated response playbook, you can configure a Send Incident via Connector task to send Alert Logic incident details to a third-party application or email address via a webhook or email connector.
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook. For more information, see [link to topic about playbook triggers].</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/incident-close/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/incident-close/</guid><description>Configure a Close Incident Task (Draft) In your automated response playbook, you can configure a Close Incident task to close an Alert Logic incident.
In your automated response playbook, you can configure a Close Incident task to add the final threat assessment to an Alert Logic incident, add a note for your organization about the reason for closing the incident, and then close it.
The source of the incident can be any of the following:</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/incident-reopen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/incident-reopen/</guid><description>Configure a Reopen Incident Task (Draft) In your automated response playbook, you can configure a Reopen Incident task to reopen an Alert Logic incident and add a note for your organization about the reason for reopening it.
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook. For more information, see [link to topic about playbook triggers]. Incident that a user selects to run the playbook on manually.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/incident-update/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/incident-update/</guid><description>Configure an Update Incident Task (Draft) In your automated response playbook, you can configure an Update Incident task to add a note for your organization to an Alert Logic incident and update the threat assessment.
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook. For more information, see [link to topic about playbook triggers]. Incident that a user selects to run the playbook on manually.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/pagerduty-send-incident/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/pagerduty-send-incident/</guid><description>Configure a Send Incident to PagerDuty Task (Draft) In your automated response playbook, you can configure a Send Incident to PagerDuty task to send Alert Logic incident details to PagerDuty via a connector.
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook. For more information, see [link to topic about playbook triggers]. Incident that a user selects to run the playbook on manually.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/post-message/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/post-message/</guid><description>Configure a Send Message to Slack Task (Draft) In your automated response playbook, you can configure a Send Message to Slack task to send a message from Alert Logic to Slack via a connection target.
Complete the following steps to successfully configure the Send Message to Slack task:
Create a Slack connection target Add the task to your playbook Configure the task input Configure the task output (optional) Create a Slack connection target The Send Incident to Slack task requires a Slack connection target.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/send-approval-channel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/send-approval-channel/</guid><description>Configure a Send Approval Request via Connection Target Task (Draft) In your automated response playbook, you can configure a Send Approval Request via Connection Target task to send an approval request to third-party applications for which you have a connection target configured.
[Need a typical use case to go here, maybe one that involves incidents]
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/send-approval-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/send-approval-user/</guid><description>Configure a Send Approval Request to User Task (Draft) In your automated response playbook, you can configure a Send Approval Request to User task to request approval from a user via an email or a push notification to the Alert Logic Mobile App.
You can send approval requests to multiple users [in your account?], but only the first to respond can approve or reject the task. A message informs subsequent responders that the inquiry already received a response.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/servicenow-create-incident/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/servicenow-create-incident/</guid><description>Configure a Create ServiceNow Incident Task (Draft) In your automated response playbook, you can configure a Create ServiceNow Incident task to create a ServiceNow incident from an Alert Logic incident sent via a connector.
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook. For more information, see [link to topic about playbook triggers]. Incident that a user selects to run the playbook on manually.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/slack-send-incident/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/slack-send-incident/</guid><description>Configure a Send Incident to Slack Task (Beta) In your automated response playbook, you can configure a Send Incident to Slack task to send Alert Logic incident details to Slack via a connectorconnector.
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook. For more information, see [link to topic about playbook triggers]. Incident that a user selects to run the playbook on manually.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/teams-send-incident/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/automated-response/tasks/teams-send-incident/</guid><description>Configure a Send Incident to Microsoft Teams Task (Beta) In your automated response playbook, you can configure a Send Incident to Microsoft Teams task to send Alert Logic incident details to Teams via a connectorconnector.
The source of the incident can be any of the following:
Incident that meets the conditions of a trigger for the playbook. For more information, see [link to topic about playbook triggers]. Incident that a user selects to run the playbook on manually.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/copy-of-automated-response/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/copy-of-automated-response/</guid><description>Automated Response (Beta) This document is intended for early-access customers, and it is updated as Automated Response features are enhanced. The Automated Response page, available under Respond in the Alert Logic console, lists your automated response playbooks. On this page, you can create and manage playbooks and their triggers, view the playbook history, and view inquiries.
Process to Define an Automated Response Playbook Create the playbook Design the playbook workflow Validate the playbook Test the playbook (Optional) Specify criteria to run the playbook automatically (Optional) Run the playbook on demand View playbook run history.</description></item><item><title/><link>https://richg-github.github.io/docs.github.io/respond/variables-incident-old/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://richg-github.github.io/docs.github.io/respond/variables-incident-old/</guid><description>Incident Playbook Schema [Intro goes here]
Playbook input parameter descriptions All playbooks publish the following variables, and they are also available for use in playbook tasks.
account_id (number) - Your Alert Logic Managed Detection and Response customer account identifier (for example, 12345678) payload_type (string) - Alert Logic MDR payload type. For an incident playbook, the value is incident. payload (object) - Alert Logic MDR payload. For an incident playbook, the payload is for an Alert Logic incident.</description></item></channel></rss>